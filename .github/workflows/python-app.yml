name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Spacy Model
      run: |
        python -m spacy download en_core_web_sm

    - name: Run vulnerability scan
      run: |
        python test2.py

    - name: Upload vulnerability report
      uses: actions/upload-artifact@v2
      with:
        name: vulnerability-report
        path: vulnerability_report.txt

    - name: Send success email
      if: success()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: Build Success - Vulnerability Report
        body: The CI/CD pipeline has successfully completed. The vulnerability report is attached.
        to: kalyanvarikolu@gmail.com
        from: ${{ secrets.MAIL_USERNAME }}
        attachments: vulnerability_report.txt

    - name: Send failure email
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: Build Failed - Vulnerability Report
        body: The CI/CD pipeline has failed. Please check the logs for details.
        to: kalyanvarikolu@gmail.com
        from: ${{ secrets.MAIL_USERNAME }}

  manual-approval:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
    - name: Wait for approval
      run: |
        echo "Waiting for manual approval..."
        echo "Click 'Run workflow' to continue."
      timeout-minutes: 60

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: manual-approval

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11
   
    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform-infra

    - name: Apply Terraform
      run: terraform apply -auto-approve
      working-directory: ./terraform-infra
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Delete terraform infra
      run: terraform destroy -auto-approve
      working-directory: ./terraform-infra
